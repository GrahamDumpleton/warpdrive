#!/bin/bash

set -eo pipefail

# Copy the application source files into place and then remove the
# original files. We can't just move the files as the target directory
# already exists and we need to ensure that file system ownership
# permissions as may be dictated by the target directory are inherited.

echo "---> Installing application source ..."

cp -Rf /tmp/src/. /app

rm -rf /tmp/src

# Trigger warpdrive to install any required Python packages and run
# and hook scripts supplied by an application for the build.

echo "---> Building application from source ..."

warpdrive-build

# Need to make everything group writable so that 'oc rsync' will work
# when deploying the image to OpenShift and trying to do live updates in
# a running container. This means we are even making files which are not
# writable by the owner writable by the group, but this is the only way
# to make it work when running container as an arbitrary user ID and
# relying on group access controls.
#
# Note that this will fail to change the permissions of the /app
# directory itself. We therefore suppress any warnings, but we also need
# to ignore the exit status as any failure will cause an error exit
# status even though permissions of remaining files are updated as we
# require.

echo "---> Fix permissions on application source ..."

chmod -Rf g+w /app || true
