#!/bin/bash

set -eo pipefail

# Copy the application source files into place and then remove the
# original files. We can't just move the files as the target directory
# already exists and we need to ensure that file system ownership
# permissions as may be dictated by the target directory are inherited.

if [ -d /tmp/artifacts/wheelhouse ]; then
    echo "---> Restoring wheelhouse from prior build"

    mkdir -p /opt/warpdrive/.warpdrive/wheelhouse

    cp -R /tmp/artifacts/wheelhouse/* /opt/warpdrive/.warpdrive/wheelhouse

    mkdir -p /opt/warpdrive/.warpdrive/packages

    cp -R /tmp/artifacts/packages/* /opt/warpdrive/.warpdrive/packages
fi

echo "---> Installing application source"

cp -Rf /tmp/src/. /opt/warpdrive

rm -rf /tmp/src

# Trigger warpdrive to install any required Python packages and run any
# hook scripts supplied by an application for the build. Exactly what is
# run will depend on the build target. The default is to build the
# application. The 'wheelhouse' target is to build Python wheels from
# the required packages but not actually install them.

WARPDRIVE_BUILD_SYSTEM=${WARPDRIVE_BUILD_SYSTEM:-docker}
WARPDRIVE_BUILD_TARGET=${WARPDRIVE_BUILD_TARGET:-application}

export WARPDRIVE_BUILD_SYSTEM
export WARPDRIVE_BUILD_TARGET

if [ "$WARPDRIVE_BUILD_TARGET" = "wheelhouse" ]; then
    echo "---> Building Python wheels for packages"

    warpdrive wheels
else
    echo "---> Building application from source"

    warpdrive build
fi

# Need to make everything group writable so that 'oc rsync' will work
# when deploying the image to OpenShift and trying to do live updates in
# a running container. This means we are even making files which are not
# writable by the owner writable by the group, but this is the only way
# to make it work when running container as an arbitrary user ID and
# relying on group access controls.
#
# Note that this will fail to change the permissions of the /app
# directory itself. We therefore suppress any warnings, but we also need
# to ignore the exit status as any failure will cause an error exit
# status even though permissions of remaining files are updated as we
# require.

echo "---> Fix permissions on application source"

chmod -Rf g+w /opt/warpdrive || true
