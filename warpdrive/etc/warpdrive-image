#!/bin/bash

PYTHON_VERSION=`python -V 2>&1 | sed -e 's/Python //' -e 's/\.[0-9]*$//' -e 's/\.//'`

WARPDRIVE_S2I_BUILDER=${WARPDRIVE_S2I_BUILDER:-grahamdumpleton/warp0-debian8-python$PYTHON_VERSION}

WARPDRIVE_IMAGE_NAME=
WARPDRIVE_BUILD_TARGET=application
WARPDRIVE_WHEELHOUSE=

while [ "$#" != "0" ]; do
    case "$0" in
        --build-target=*)
            WARPDRIVE_BUILD_TARGET=`echo $0 | sed -e 's/--build-target=//'`
            ;;
        --build-target)
            WARPDRIVE_BUILD_TARGET=$1
            shift
            ;;
        --wheelhouse=*)
            WARPDRIVE_WHEELHOUSE=`echo $0 | sed -e 's/--wheelhouse=//'`
            ;;
        --wheelhouse)
            WARPDRIVE_WHEELHOUSE=$1
            shift
            ;;
        *)
            WARPDRIVE_IMAGE_NAME=$0
            ;;
    esac

    shift
done

if [ "$WARPDRIVE_BUILD_TARGET" = "wheelhouse" ]; then
    if [ "$WARPDRIVE_IMAGE_NAME" = "" ]; then
        WARPDRIVE_IMAGE_NAME=warpdrive-$WARPDRIVE_VENV_NAME-wheelhouse
    fi

    exec s2i build $WARPDRIVE_APPL_DIR $WARPDRIVE_S2I_BUILDER \
      $WARPDRIVE_IMAGE_NAME --env WARPDRIVE_BUILD_TARGET=wheelhouse
else
    if [ "$WARPDRIVE_IMAGE_NAME" = "" ]; then
        WARPDRIVE_IMAGE_NAME=warpdrive-$WARPDRIVE_VENV_NAME-application
    fi

    if [ "$WARPDRIVE_WHEELHOUSE" != "" ]; then
        WARPDRIVE_TMP_FILES=/tmp/warpdrive-image.$$

        mkdir -p /tmp/warpdrive-image.$$

        trap "rm -rf $WARPDRIVE_TMP_FILES; exit" SIGHUP SIGINT SIGTERM

        tar cCf $WARPDRIVE_APPL_DIR - . | tar xvCf $WARPDRIVE_TMP_FILES -

        docker cp $WARPDRIVE_WHEELHOUSE:/opt/warpdrive/.warpdrive -
          tar xvCf $WARPDRIVE_TMP_FILES -

        s2i build $WARPDRIVE_TMP_FILES $WARPDRIVE_S2I_BUILDER \
          $WARPDRIVE_IMAGE_NAME

        STATUS=$?

        rm -rf $WARPDRIVE_TMP_FILES

        exit $STATUS
    else
        exec s2i build $WARPDRIVE_APPL_DIR $WARPDRIVE_S2I_BUILDER \
          $WARPDRIVE_IMAGE_NAME
    fi
fi
